#!/bin/bash

# Function to display verbose messages
verbose() {
  if [ "$verbose_mode" = true ]; then
    echo "$@"
  fi
}

# Parse options
pull_before_push=false
verbose_mode=false

while [[ "$1" =~ ^- ]]; do
  case $1 in
    -p | --pull)
      pull_before_push=true
      ;;
    -v | --verbose)
      verbose_mode=true
      ;;
    *)
      echo "Invalid option: $1"
      exit 1
      ;;
  esac
  shift
done

# Check for unstaged changes
if [ -z "$(git status --porcelain)" ]; then
  echo "No changes to commit."
  exit 0
fi

# Pull the latest changes if the option is enabled
if [ "$pull_before_push" = true ]; then
  verbose "Pulling latest changes from the remote branch..."
  git pull origin $(git branch --show-current)
fi

# Ask for a commit message
read -p "Enter commit message (leave empty for default): " commit_message

# Default message if none is provided
if [ -z "$commit_message" ]; then
  commit_message="Auto commit on $(date)"
fi

# Add changes to the staging area
verbose "Staging changes..."
git add .

# Commit with the provided or default message
verbose "Committing changes..."
git commit -m "$commit_message"

# Push the changes to the current branch
verbose "Pushing changes to the remote branch..."
git push origin $(git branch --show-current)

echo "Changes have been committed and pushed successfully."
